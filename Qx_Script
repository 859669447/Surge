// Variables used by Scriptable.
// These must be at the very top of the file. Do not edit.
// icon-color: orange; icon-glyph: bullhorn;

// Author: 叮噹鬧 github.com/dingdangnao //

const widgetSize = config.widgetFamily
const iconUrl = "https://raw.githubusercontent.com/dingdangnao/Scriptable/main/icon/hotnews.png"
const urlscheme = "https://zhuanlan.zhihu.com/p/5832996280"

// 自定义显示多少条数据。在不同平台上小组件尺寸不一致
let dataCount = {
    small:8,
    medium:8,
    large:8,
}
if (Device.model() === "iPhone") {
    dataCount.large = 22
}else if (Device.model() === "iPad") {
    dataCount.large = 20
} else {
    dataCount.large = 20
}
console.log(widgetSize)
async function render() {
    if (widgetSize === 'medium') {
        return await renderMedium(dataCount.medium)
    } else if (widgetSize === 'large') {
        return await renderMedium(dataCount.large)
    } else {
        return await renderSmall(dataCount.small)
    }
}
let widget = await render();

if (config.runsInWidget) {
  Script.setWidget(widget);
} else {
    const sw = await renderSmall(dataCount.small)
    sw.presentSmall();
    const mw = await renderMedium(dataCount.medium)
    mw.presentMedium();
    const lw = await renderMedium(dataCount.large)
    lw.presentLarge();
}
await Script.complete();
/**
 * 渲染小尺寸组件
 */
async function renderSmall(count) {
    const bgColor = Color.dynamic(new Color('#FAFAFA'), new Color('#1a1a1a'));
    let res = await getData('https://60s.viki.moe/60s?v2=1')
    let data = res['data']['news']
    let updateTime = res['data']['updated']
    //console.log(data)
    // 显示数据
    let w = new ListWidget()
    w.backgroundColor = bgColor;
    w.setPadding(16, 8, 16, 8)

    const _updateTime = '更新于' + time(updateTime)
    w = await renderHeader(w, iconUrl, "60s新闻", _updateTime, null)

    // 布局：一行一个，左边顺序排序，中间标题
    for (let i = 0; i < count; i++) {
        let topic = data[i];
        let dom = w.addStack()
        dom.centerAlignContent()
        let title = dom.addText(topic)
        title.font = Font.systemFont(8)
        dom.addSpacer()
        w.addSpacer(2)
    }
    w.url = urlscheme
    return w
}
/**
 * 渲染中尺寸组件
 */
async function renderMedium(count) {
    const bgColor = Color.dynamic(new Color('#FAFAFA'), new Color('#1A1A1A'));
    let res = await getData('https://60s.viki.moe/60s?v2=1')
    let data = res['data']['news']
    let updateTime = res['data']['updated']
    // 显示数据
    let w = new ListWidget()
    w.backgroundColor = bgColor;
    w.setPadding(32, 16, 32, 16)
    const _updateTime = '更新于' + time(updateTime)
    w = await renderHeader(w, iconUrl, "60s新闻", _updateTime)

    // 布局：一行一个，左边顺序排序，中间标题
    for (let i = 0; i < count; i++) {
        let topic = data[i];
        let dom = w.addStack()
        dom.centerAlignContent()
        let title = dom.addText(topic)
        title.lineLimit = 1
        title.font = Font.systemFont(9)
        dom.addSpacer()
        w.addSpacer(1)
    }

    return w
}
/**
 * 渲染大尺寸组件
 */
async function renderLarge(count) {
    return await renderMedium(count)
}

/**
 * 渲染标题
 * @param widget 组件对象
 * @param icon 图标url地址
 * @param title 标题
 * @param altText 更新时间
 * @param altIcon 右侧icon
 */

async function renderHeader(widget, icon, title, altText, altIcon) {
    let header = widget.addStack()
    header.bottomAlignContent()
    header.addSpacer(2)
    let _icon = header.addImage(await getImage(icon))
    _icon.imageSize = new Size(16, 16)
    _icon.cornerRadius = 4
    header.addSpacer(8)

    let _title = header.addText(title)
    _title.textOpacity = 1
    _title.font = Font.boldSystemFont(10)

    if (altText) {
        header.addSpacer(10)
        let _altText = header.addText(altText)
        _altText.font = Font.systemFont(8)
        _altText.textOpacity = 0.8
    }

    if (altIcon) {
        header.addSpacer()
        let _altIcon = header.addImage(await getImage(altIcon))
        _altIcon.imageSize = new Size(16, 16)
        _altIcon.cornerRadius = 4
    }

    header.url = urlscheme
    widget.addSpacer()
    return widget
}

/**
 * 获取api数据
 * @param api api地址
 */
async function getData(api) {
    let req = new Request(api)
    return await req.loadJSON()
}

/**
 * 加载远程图片
 * @param url string 图片地址
 * @return image
 */
async function getImage(url) {
    let req = new Request(url)
    return await req.loadImage()
}

function time(timestamp) {
    var date = new Date(timestamp);
    var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '月';
    var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + '日';
    var h = (date.getHours() < 10 ? '0' + (date.getHours()) : date.getHours()) + '时';
    var m = (date.getMinutes() < 10 ? '0' + (date.getMinutes()) : date.getMinutes()) + "分";
    return h + m;
}
